import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class KeyboardFactory {

    // –ó–∞—â–∏—Ç–∞ –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ —É—Ç–∏–ª–∏—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
    private KeyboardFactory() {
        throw new IllegalStateException("Utility class");
    }

    public static InlineKeyboardMarkup createTestSelectionKeyboard() {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è Java —Ç–µ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
        InlineKeyboardButton javaButton = createButton("‚òï Java —Ç–µ—Å—Ç", "test_java");

        // –ö–Ω–æ–ø–∫–∞ –¥–ª—è Python —Ç–µ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
        InlineKeyboardButton pythonButton = createButton("üêç Python —Ç–µ—Å—Ç", "test_python");

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏
        keyboard.setKeyboard(List.of(
                Collections.singletonList(javaButton),
                Collections.singletonList(pythonButton)
        ));
        return keyboard;
    }

    public static InlineKeyboardMarkup createOptionsKeyboard(List<String> options) {
        if (options == null || options.isEmpty()) {
            throw new IllegalArgumentException("Options list cannot be null or empty");
        }

        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –†–∞–∑–±–∏–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 2 –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        for (int i = 0; i < options.size(); i += 2) {
            List<InlineKeyboardButton> row = new ArrayList<>();
            row.add(createButton(options.get(i), options.get(i)));

            if (i + 1 < options.size()) {
                row.add(createButton(options.get(i + 1), options.get(i + 1)));
            }

            rows.add(row);
        }

        keyboard.setKeyboard(rows);
        return keyboard;
    }

    public static InlineKeyboardMarkup createSingleButtonKeyboard(String text, String callbackData) {
        if (text == null || callbackData == null) {
            throw new IllegalArgumentException("Text and callback data cannot be null");
        }

        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        keyboard.setKeyboard(Collections.singletonList(
                Collections.singletonList(createButton(text, callbackData))
        ));
        return keyboard;
    }
    public static InlineKeyboardButton createButton(String text, String callbackData) {
        if (text == null || callbackData == null) {
            throw new IllegalArgumentException("Text and callback data cannot be null");
        }

        return InlineKeyboardButton.builder()
                .text(text)
                .callbackData(callbackData)
                .switchInlineQueryCurrentChat("") // –≠—Ç–æ —É–±–µ—Ä–µ—Ç @username –±–æ—Ç–∞
                .build();
    }
    //–∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–≥—Ä—ã
    public static InlineKeyboardMarkup createMainMenuKeyboard() {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        rows.add(Arrays.asList(
                createButton("üéÆ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", "start_game"),
                createButton("‚úä‚úåÔ∏è‚úã RPS", "start_rps")
        ));
        rows.add(Collections.singletonList(
                createButton("üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç", "start_test")
        ));
        keyboard.setKeyboard(rows);
        return keyboard;
    }


    // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    public static InlineKeyboardMarkup createPostTestKeyboard() {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();

        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: –î–µ–π—Å—Ç–≤–∏—è —Å —Ç–µ—Å—Ç–æ–º
        rows.add(Arrays.asList(
                createButton("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ—Å—Ç", "restart_test"),
                createButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "show_stats")
        ));

        // –í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: –ù–∞–≤–∏–≥–∞—Ü–∏—è
        rows.add(Arrays.asList(
                createButton("üìö –î—Ä—É–≥–∏–µ —Ç–µ—Å—Ç—ã", "select_another_test"),
                createButton("üè† –í –º–µ–Ω—é", "main_menu")
        ));

        // –¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
        rows.add(Collections.singletonList(
                createButton("üí¨ –†–µ–∂–∏–º –æ–±—â–µ–Ω–∏—è", "start_chat")
        ));

        keyboard.setKeyboard(rows);
        return keyboard;
    }
}